//
// Cforall Version 1.0.0 Copyright (C) 2021 University of Waterloo
//
// The contents of this file are covered under the licence agreement in the
// file "LICENCE" distributed with Cforall.
//
// bits/weakso_locks.hfa -- PUBLIC
// Runtime locks that are compiled out when used without linking the runtime
// thread system.
//
// Author           : Thierry Delisle
// Created On       : Thu Jan 21 19:59:25 2021
// Last Modified By :
// Last Modified On :
// Update Count     :
//
#include "bits/weakso_locks.hfa"
#pragma GCC visibility push(default)

void  ?{}( blocking_lock &, bool, bool ) {}
void ^?{}( blocking_lock & ) {}

void lock( blocking_lock & ) {}
bool try_lock( blocking_lock & ) { return false; }
void unlock( blocking_lock & ) {}
void on_notify( blocking_lock &, struct thread$ * ) {}
size_t on_wait( blocking_lock &, void (*pp_fn)( void * ), void * pp_datum ) { return 0; }
void on_wakeup( blocking_lock &, size_t ) {}
size_t wait_count( blocking_lock & ) { return 0; }
bool register_select( blocking_lock & this, select_node & node ) { return false; }
bool unregister_select( blocking_lock & this, select_node & node ) { return false; }
bool on_selected( blocking_lock & this, select_node & node ) { return true; }


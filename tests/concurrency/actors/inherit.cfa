#include <actor.hfa>
#include <fstream.hfa>
#include <stdlib.hfa>
#include <string.h>
#include <stdio.h>
#include <mutex_stmt.hfa>

struct Server { inline actor; };

struct Server2 { inline Server; int b; };
void ^?{}( Server2 & this ) { mutex(sout) sout | 'A'; }

struct D_msg { int a; inline message; };
void ?{}( D_msg & this ) { set_allocation( this, Delete ); }
void ^?{}( D_msg & ) { mutex(sout) sout | 'A'; }

struct D_msg2 { inline D_msg; };

allocation handle() {
	return Finished;
}

allocation receive( Server &, D_msg & ) { return handle(); }
allocation receive( Server &, D_msg2 & ) { return handle(); }
allocation receive( Server2 &, D_msg & ) { return Delete; }
allocation receive( Server2 &, D_msg2 & ) { return Delete; }

int main() {
	sout | "Start";
	{
		actor_start();
		D_msg * dm = alloc();
		(*dm){};
		D_msg2 * dm2 = alloc();
		(*dm2){};
		Server2 * s = alloc();
		(*s){};
		Server2 * s2 = alloc();
		(*s2){};
		*s | *dm;
		*s2 | *dm2;
		actor_stop();
	}
	{
		actor_start();
		Server s[2];
		D_msg * dm = alloc();
		(*dm){};
		D_msg2 * dm2 = alloc();
		(*dm2){};
		s[0] | *dm;
		s[1] | *dm2;
		actor_stop();
	}
	sout | "Finished";
}

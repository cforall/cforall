#include <vec/vec2.hfa>
#include <fstream.hfa>

int main(void) {
    vec2(float) v1 = {1.f,2.f};
    sout | "ctor(x,y):" | v1;

    vec2(float) v2 = v1;
    sout | "copy ctor:" | v2;

    v2 = (vec2(float)){3.f, 4.2f};
    sout | "assignment:" | v2;

    v2 = v1;
    sout | "move assignment:" | v2;

    vec2(float) v3 = 0;
    sout | "zero-init:" | v3;

    v1 = 0;
    sout | "zero-assign:" | v1;

    vec2(float) v4 = {1.23f};
    sout | "fill-ctor:" | v4;

    v1 = (vec2(float)){1.23f, 3.43f};
    sout | "?-?:" | (v1 - (vec2(float)){1.21f,3});

    v1 -= (vec2(float)){-2, 10};
    sout | "?-=?:" | v1;

    v1 = -v1;
    sout | "-?:" | v1;

    v1 = (vec2(float)){1.5f, 2.75f};
    sout | "?+?:" | (v1 + (vec2(float)){0.8f, -0.3f});

    v1 += (vec2(float)){0.8f, -0.3f};
    sout | "?+=?:" | v1;

    v1 = (vec2(float)){1.5f, 2.75f};
    sout | "v*s:" | v1 * 3.f;

    sout | "s*v:" | 3.f * v1;

    v1 *= 3;
    sout | "?*=?:" | v1;

    {
        vec2(float) u = {1.2f, -5.8f};
        vec2(float) v = {2.2f, 3};
        sout | "?*?(vec)" | (u * v);
        sout | "?*=?(vec)" | (u *= v);
    }


    v1 = (vec2(float)){2, -0.1f};
    sout | "?/?:" | (v1 / 3);

    v1 /= 3;
    sout | "?/=?:" | v1;

    {
        vec2(float) u = {1.2f, -5.8f};
        vec2(float) v = {2.2f, 3};
        sout | "?/?(vec)" | (u / v);
        sout | "?/=?(vec)" | (u /= v);
    }

    {
        vec2(float) u = {1.2f, -3.5f};
        sout | "++?" | ++u;
    }
    {
        vec2(float) u = {1.2f, -3.5f};
        sout | "--?" | ++u;
    }
    {
        vec2(float) u = {1.2f, -3.5f};
        sout | "?++(part 1)" | u++;
        sout | "?++(part 2)" | u;
    }
    {
        vec2(float) u = {1.2f, -3.5f};
        sout | "?--(part 1)" | u--;
        sout | "?--(part 2)" | u;
    }

    v1 = (vec2(float)){2, 3};
    v2 = (vec2(float)){-3, 2};
    sout | "dot_1:" | dot(v1, v2);

    v2 = (vec2(float)){1.3f, 2};
    sout | "dot_2:" | dot(v1, v2);

    v1 = (vec2(float)){4, 3};
    sout | "length:" | length(v1);

    sout | "length_squared:" | length_squared(v1);

    v2 = (vec2(float)){6, -3.2f};
    sout | "distance:" | distance(v1, v2);

    sout | "normalize:" | normalize(v2);

    v1 = (vec2(float)){1,0};
    sout | "normalize_2:" | normalize(v1);

    sout | "project:" | project((vec2(float)){5,6}, (vec2(float)){1, 0});
    sout | "project_2:" | project((vec2(float)){5,6}, (vec2(float)){1, 1});

    v1 = (vec2(float)){5,6};
    v2 = (vec2(float)){1,0};
    sout | "reflect:" | reflect(v1,v2);

    v2 = (vec2(float)){0,-1};
    sout | "refract:" | refract(v1,normalize(v2),1.f);
    sout | "refract:" | refract(v1,normalize(v2),1.f/1.33f);

    vec2(float) geometric_normal = {5,6};
    vec2(float) perturbed_normal = {4,5.5f};
    vec2(float) eyeline = {-1,0.002f};
    sout | "faceforward_nochange:" | faceforward(perturbed_normal, eyeline, geometric_normal);

    eyeline = (vec2(float)){1,0.002f};
    sout | "faceforward_flip:" | faceforward(perturbed_normal, eyeline, geometric_normal);
}
